{"version":3,"sources":["calculator/MainCalculator.js","stoic-quote-generator/Quotes.js","movie-searcher/Card.js","movie-searcher/SearchMovies.js","meme-generator/Meme.js","noughts-crosses/helpers.js","noughts-crosses/Square.js","noughts-crosses/Board.js","noughts-crosses/Game.js","stopwatch-component/customHooks.js","stopwatch-component/Stopwatch.js","paint-application/Name.js","paint-application/Canvas.js","paint-application/ColorPicker.js","paint-application/RefreshButton.js","paint-application/Paint.js","paint-application/WindowSize.js","App.js","serviceWorker.js","index.js"],"names":["MainCalculator","useState","input","setInput","calcBtns","forEach","item","push","style","fontSize","onClick","e","target","value","key","className","role","aria-label","substr","length","String","eval","includes","toFixed","console","log","Quotes","randQuote","setRandQuote","currentQuote","setCurrentQuote","useEffect","fetch","then","res","json","data","randNum","Math","floor","random","attributes","text","Symbol","Card","movie","minWidth","maxHeight","id","src","poster_path","alt","title","release_date","vote_average","overview","SearchMovies","query","setQuery","movies","setMovies","searchMovies","a","preventDefault","url","results","onSubmit","htmlFor","type","name","placeholder","onChange","filter","map","Meme","templates","setTemplates","randImg","setRandImg","topText","setTopText","bottomText","setBottomText","memes","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","height","calculateWinner","squares","lines","i","b","c","background","border","fontWeight","cursor","outline","Square","borderRadius","width","margin","display","gridTemplate","Board","square","styles","Game","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","padding","timeInHistory","slice","current","_step","move","destination","step","useStopwatch","elapsed","setElapsed","ticker","setTicker","elapsedTime","startTime","start","Date","now","setInterval","update","resetTime","stopTime","clearInterval","Stopwatch","click","setClick","parseFloat","React","memo","setName","setSelectionRange","Canvas","props","drawing","setDrawing","window","innerWidth","innerHeight","canvasRef","useRef","ctx","stopDrawing","closePath","getContext","ref","onMouseDown","lineJoin","lineCap","lineWidth","strokeStyle","color","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","onMouseUp","onMouseOut","onMouseMove","coords","lineTo","stroke","handleMouseMove","ColorPicker","colors","activeColor","setActiveColor","checked","cb","Paint","setColors","getColors","useCallback","baseColor","randomColor","hex","visible","setVisible","timeoutId","windowWidth","windowHeight","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","clearTimeout","setTimeout","borderTop","Name","RefreshButton","App","showThumbs","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75c3ba9e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport \"./calcStyle.css\";\n\nfunction MainCalculator() {\n  \n  const [input, setInput] = useState(\"\");\n  const calcBtns = [];\n  [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, \".\", \"%\"].forEach(item => {\n    calcBtns.push(\n      <button style={{fontSize:\"20px\"}}\n        onClick={e => {\n          setInput(input + e.target.value);\n        }}\n        value={item}\n        key={item}\n      >\n        {\" \"}\n        {item}\n      </button>\n    );\n  });\n\n  return (\n\n  <div className=\"card\">\n  <h3 className=\"name\">Calculator <span role='img' aria-label='calculator'>🔢</span> </h3>\n    <div className=\"wrapper\">\n      {\" \"} \n      <div className=\"show-input\">{input} <br/></div>\n      <div className=\"digits flex\">{calcBtns}</div>\n      <div className=\"modifiers subgrid\">\n        {/* clear button */}\n\n        <button onClick={() => setInput(input.substr(0, input.length - 1))}>\n          Clear\n        </button>\n\n        {/* clear all */}\n        <button onClick={() => setInput(\"\")} value=\"\">\n          AC\n        </button>\n      </div>\n      <div className=\"operations subgrid\">\n        {/* add button */}\n        <button onClick={e => setInput(input + e.target.value)} value=\"+\">\n          +\n        </button>\n\n        {/* minus btn */}\n        <button onClick={e => setInput(input + e.target.value)} value=\"-\">\n          {\" \"}\n          - {\" \"}\n        </button>\n\n        <button onClick={e => setInput(input + e.target.value)} value=\"*\">\n          {\" \"}\n          x\n        </button>\n\n        <button onClick={e => setInput(input + e.target.value)} value=\"/\">\n          {\" \"}\n          ÷\n        </button>\n        {/* \"=\" btn */}\n        <button\n          onClick={e => {\n            try {\n              setInput(\n                String(eval(input)).length > 3 &&\n                  String(eval(input)).includes(\".\")\n                  ? String(eval(input).toFixed(4))\n                  : String(eval(input))\n              );\n            } catch (e) {\n              console.log(e);\n            }\n          }}\n          value=\"=\"\n        >\n          =\n        </button>\n      </div>\n    </div>\n    </div>\n\n  );\n}\n\nexport default MainCalculator","import React, {useState, useEffect} from \"react\"\nimport '../style.css'\n\nconst Quotes = () => {\n\n    const stoicApi = \"https://randomstoicquotesapi.herokuapp.com/api/v1/quotes\";\n\n    const [randQuote, setRandQuote] = useState('')\n    const [currentQuote, setCurrentQuote] = useState('')\n\n    useEffect(() => {\n        fetch (stoicApi)\n        .then(res => res.json())\n        .then(data => {\n            const randNum = Math.floor(Math.random() * data.data.length);\n            setRandQuote(data.data[randNum].attributes.text) \n        })  \n    }, [currentQuote])\n// why does below have to be outside?? why isn't it global / how do i make it global above\n    return (\n        <div className=\"card\">\n            <h3>Stoic Quote Generator <span>🛡</span></h3>\n            <div className=\"quoteSpace\">\n                {randQuote}\n            </div>\n            <br/><br/>\n            <button \n                className=\"buttonStyle\" \n                onClick={() => setCurrentQuote(Symbol())}\n            > \n                give me a new quote\n            </button>\n        </div>\n    )\n\n}\nexport default Quotes","import React from 'react';\nimport './movie.css';\nimport '../style.css'\n\nexport default function Card({movie}) {\n    return (\n        <div>\n        <div style={{minWidth: \"10em\", maxHeight:\"20em\"}} className=\"card\">   \n        <div style={{minWidth: \"10em\"}} className=\"card--movie\" key={movie.id} >\n           <img className=\"card--image\"\n               src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n               alt={movie.title + ' poster'}\n               />\n         \n           <h3>{movie.title}</h3>\n           <div className=\"cardContent\">\n           <p><div className=\"bold\">Release Date: </div> {movie.release_date}</p>\n           <p><div className=\"bold\">Rating: </div> {movie.vote_average}</p>\n           <p><div className=\"bold\"> Description:</div> {movie.overview}</p>\n           </div>\n           </div>\n           </div>\n        </div>\n   )\n}","import React, {useState} from \"react\";\nimport Card from './Card.js';\nimport './movie.css'\n\nlet key = 'b302a8f70b7cbdb9d71daff76e8e257a'\n\nexport default function SearchMovies(){\n\nconst [query, setQuery] = useState('')  \n\nconst [movies, setMovies] = useState([])\n\n\n    const searchMovies = async (e) => {\n        e.preventDefault();\n \n        const url = `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n        try {\n            const res = await fetch(url)\n            \n            const data = await res.json()\n\n            setMovies(data.results || [])\n\n        } \n        catch(err){\n            console.log(err)\n        }\n    } \n\n\n        return (\n            \n            <div className=\"card\">  \n                <h3> Movie Searcher <span role='img' aria-label='movie_icon'> 🎥</span></h3>\n                <div className=\"movieInput\"> \n                    <form className=\"form\" onSubmit={searchMovies}>\n                        <label className=\"label\" htmlFor=\"query\">Movie Name</label>\n                        <br></br>  <br></br> \n                        <input className=\"input\" type=\"text\" name=\"query\"\n                            placeholder=\"i.e. Jurassic Park\"\n                            value={query} onChange={(e) => setQuery(e.target.value)}\n                            />\n                        <br></br><br></br>\n                        <button className=\"button\" type=\"submit\">Search</button>\n                    </form>\n                </div>\n                <div className=\"card-list\">\n                    {\n                        movies.length\n                    ?\n                        movies\n                        .filter(movie => \n                            movie.poster_path\n                        )\n                        .map(movie => \n                           <Card movie={movie} key={movie.id} />\n                       )\n                    :\n                        <div></div>\n                    }\n                </div>  \n            </div>  \n                \n               )\n           }\n","import React, {useState, useEffect} from 'react'\nimport \"../App.css\";\nimport \"./Meme.css\";\n\nconst Meme = () => {\n\t//create state to hold some templates\n\tconst [templates, setTemplates] = useState(\"\")\n\tconst [randImg, setRandImg] = useState(\"\")\n\n\tconst [topText, setTopText] = useState('')\n\tconst [bottomText, setBottomText] = useState('')\n\n\n\tuseEffect(() => {\n\t\tfetch (\"https://api.imgflip.com/get_memes\")\n\t\t.then (res => res.json())\n\t\t.then (data => {\n\t\t\tconst randNum = Math.floor(Math.random() * data.data.memes.length);\n\t\t\tsetRandImg(data.data.memes[randNum].url)\n\t\t})\n    }, [templates]);\n    // only run after first render [] - dont run before\n\n// setTemplates(templates[randNum].url)\n\n\nreturn (\n    \n\t<div className=\"card meme\">\n\t\t<h3 className=\"name\">Meme Generator <span role='img' aria-label='smile'>🤣</span></h3>\n\t\t<div \n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(${randImg})`, \n\t\t\t\tbackgroundSize: 'contain', \n\t\t\t\tbackgroundRepeat: 'no-repeat', \n\t\t\t\tbackgroundPosition: '50% 50%', \n\t\t\t\tminWidth: '200px', \n\t\t\t\theight: \"250px\", \n\t\t\t}}\n\t\t> \n\t\t\t<p className=\"memeText\">\n\t\t\t\t{topText}\n\t\t\t</p>\n\t\t\t<p className=\"memeText\">\n\t\t\t\t{bottomText}\n\t\t\t</p>\n\t\t</div>\n\t\t<button onClick={() => setTemplates(Symbol())}> pick a random meme</button>\n\t\t<br/>\n\t\t<input \n\t\t\tplaceholder=\"enter top text here\" \n\t\t\ttype=\"topText\" \n\t\t\tvalue={topText} \n\t\t\tonChange={e => setTopText(e.target.value)} \n\t\t/> \n\t\t<br/>\n\t\t<input \n\t\t\tplaceholder=\"enter bottom text\" \n\t\t\ttype=\"bottomText\" \n\t\t\tvalue={bottomText} \n\t\t\tonChange={e => setBottomText(e.target.value)} \n\t\t/> \n\t</div>\n\n)\n\n}\n\nexport default Meme","export function calculateWinner(squares) {\n    // all straight and diganol possibilittes\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        // object descturcting - naming each value in lines a,b,c\n      const [a, b, c] = lines[i];\n      // check if X or O is at the first position, then check if the first value equals\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  const squares = [\n    null, null, null,\n    'X', 'X', 'O',\n    null, null, null\n  ];\n  \n  console.log(calculateWinner(squares));","import React from 'react';\n\nconst style = {\n    background: 'lightblue',\n    border: '2px solid darkblue',\n    fontSize: '30px',\n    fontWeight: '800',\n    cursor: 'pointer',\n    outline: 'none'\n};\n\nconst Square = ({ value, onClick }) => (\n    <button style={style} onClick={onClick}>\n        {value}\n    </button>\n);\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n    border: '4px solid darkblue',\n    borderRadius: '10px',\n    width: '249px',\n    height: '250px',\n    margin: '0 auto',\n    display: 'grid',\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\n};\n\nconst Board = ({ squares, onClick }) => (\n    <div style={style}>\n        {squares.map((square, i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n        ))}\n    </div>\n)\n\nexport default Board;","import React, { useState } from 'react';\nimport { calculateWinner } from './helpers.js';\nimport Board from './Board';\n\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto',\n};\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n\n    const handleClick = i => {\n        const timeInHistory = history.slice(0, stepNumber + 1);\n        const current = timeInHistory[stepNumber];\n        const squares = [...current];\n        \n        if (winner || squares[i]) return;\n    \n        squares[i] = xIsNext ? 'X' : 'O';\n        setHistory([...timeInHistory, squares]);\n        setStepNumber(timeInHistory.length);        \n        setXisNext(!xIsNext);\n    }\n\n    const jumpTo = step => {\n        setStepNumber(step);\n        setXisNext(step % 2 === 0)\n    };\n\n    const renderMoves = () => (\n        history.map((_step, move) => {\n            const destination = move ? `Go to move#${move}` : 'Restart';\n            return (\n                <li key={move}>\n                    <button onClick={() => jumpTo(move)}>{destination}</button>\n                </li>\n            )\n        })        \n    )\n\n    return (\n        <>\n       \n            <div className=\"card\">\n            <h3> can you beat me? <span role='img' aria-label='cross'>❎⭕</span>  </h3>\n            <div style={{padding:\"40px\", maxHeight: \"25em\"}}>\n            <Board squares={history[stepNumber]} onClick={handleClick} />\n            <div style={styles}>\n                <p>{winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\n                {renderMoves()}\n            </div>\n            </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default Game;","import { useState } from \"react\";\n\nexport const useStopwatch = () => {\n  const [elapsed, setElapsed] = useState(0);\n  const [ticker, setTicker] = useState(null);\n\n  const update = () => {\n    const start = elapsed > 0 ? Date.now() - elapsed : Date.now();\n    setTicker(setInterval(() => setElapsed(Date.now() - start), 100));\n  };\n\n  return {\n    elapsedTime: (elapsed / 1000).toFixed(1),\n    startTime: () => update(),\n    resetTime: () => setElapsed(0),\n    stopTime: () => clearInterval(ticker)\n  };\n};\n","import React, {useState} from \"react\";\nimport { useStopwatch } from \"./customHooks.js\";\n\n\nconst Stopwatch = () => {\n  const [click,setClick] = useState(false)\n\n  const { elapsedTime, startTime, stopTime, resetTime } = useStopwatch();\n\n  return (\n    \n    <div className=\"card\">\n      <h3> Stopwatch <span>⏱</span> </h3>\n      <div className=\"stopwatches\">\n        <article style={{padding: 50 +'px'}}>\n          <h1>{elapsedTime}s</h1>\n          {\n            !click\n          ?\n            <button onClick={()=>{\n              setClick(!click)\n              startTime()\n            }}>\n              {parseFloat(elapsedTime) ? 'Continue':'Start'}\n            </button>\n          :\n            <button onClick={()=>{\n              stopTime()\n              setClick(!click)\n            }}>\n              Stop\n            </button>\n          }\n          <button onClick={resetTime}>Reset</button>\n        </article>\n      </div>\n    </div>\n\n  );\n};\n\nexport default Stopwatch","import React, { useState } from 'react'\n\nexport default React.memo(() => {\n  const [name, setName] = useState('')\n  return (\n    <label className=\"header-name\">\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n        onClick={e => e.target.setSelectionRange(0, e.target.value.length)}\n        placeholder=\"Untitled\"\n      />\n    </label>\n  )\n})","import React, { useState, useEffect, useRef } from 'react'\n\n\nexport default function Canvas(props) {\n  const [drawing, setDrawing] = useState(false)\n  const [width] = useState(window.innerWidth)\n  const [height] = useState(window.innerHeight)\n  \n  const canvasRef = useRef()\n  const ctx = useRef()\n  \n  useEffect(() => {\n    ctx.current = canvasRef.current.getContext('2d')\n  }, [])\n\n  \n  function handleMouseMove(e) {\n    // actual coordinates\n    const coords = [\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop\n    ]\n    if (drawing) { \n      ctx.current.lineTo(...coords)\n      ctx.current.stroke()\n    }\n    if (props.handleMouseMove) {\n        props.handleMouseMove(...coords)\n    }\n  }\n  function startDrawing(e) {\n    ctx.current.lineJoin = 'round'\n    ctx.current.lineCap = 'round'\n    ctx.current.lineWidth = 10\n    ctx.current.strokeStyle = props.color\n    ctx.current.beginPath();\n    // actual coordinates\n    ctx.current.moveTo(\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop\n    )\n    setDrawing(true)\n  }\n  function stopDrawing() {\n    ctx.current.closePath()\n    setDrawing(false)\n  }\n  \n  return <canvas\n    ref={canvasRef}\n    width={props.width || width}\n    height={props.height || height}\n    onMouseDown={startDrawing}\n    onMouseUp={stopDrawing}\n    onMouseOut={stopDrawing}\n    onMouseMove={handleMouseMove}\n  />\n}\n","import React from 'react'\n\nexport default function ColorPicker({ colors = [], activeColor, setActiveColor }) {\n  if (!colors.length) return null\n  return (\n    <fieldset className=\"color-picker\">\n      <h4>Shade</h4>\n      {colors.map((color, i) => (\n        <label key={i}>\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value={color}\n            checked={activeColor === color}\n            onChange={() => setActiveColor(color)}\n          />\n          <span style={{ background: color }} />\n        </label>\n      ))}\n    </fieldset>\n  )\n}\n","import React from 'react'\n\nexport default React.memo(({ cb }) => {\n  return <button className=\"button-refresh-colors\" onClick={cb}>Random Color</button>\n})","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport Name from './Name'\nimport Canvas from './Canvas'\nimport ColorPicker from './ColorPicker'\nimport RefreshButton from './RefreshButton'\nimport useWindowSize from './WindowSize'\nimport randomColor from 'randomcolor'\n\nexport default function Paint() {\n  const [colors, setColors] = useState([])\n  const [activeColor, setActiveColor] = useState(null)\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n    .then(res => res.json())\n    .then(res => {\n      setColors(res.colors.map(color => color.hex.value))\n      setActiveColor(res.colors[0].hex.value)\n    })\n  }, [])\n  useEffect(getColors, [])\n  \n  const [visible, setVisible] = useState(false)\n  let timeoutId = useRef()\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setVisible(true)\n    clearTimeout(timeoutId.current)\n    timeoutId.current = setTimeout(() => setVisible(false), 500)\n  })\n  \n  return (\n\n   <div style={{height: \"30em\" }} className=\"card\">  \n   <h3> Paint  <span>🖌</span> </h3>\n    <div className=\"app\">\n      <header style={{ borderTop: `10px solid ${activeColor}` }}>\n        <div>\n          <Name />\n        </div>\n        <div style={{ padding: \"10px\" }}>\n          <ColorPicker\n            colors={colors}\n            activeColor={activeColor}\n            setActiveColor={setActiveColor}\n          />\n          <RefreshButton cb={getColors} />\n        </div>\n      </header>\n      <div style={{border:'1px solid grey', borderRadius: '0 0 15px 15px', height:'184px'}}>\n        You can draw here:\n        {activeColor && (\n          <Canvas\n            color={activeColor}\n            height={window.innerHeight}\n          />\n        )}\n      </div>\n\n      <div className={`window-size ${visible ? '' : 'hidden'}`}>\n        {windowWidth} x {windowHeight}\n      </div>\n    </div>\n    </div>\n\n  )\n}\n","import { useState, useEffect } from 'react'\n\nexport default function useWindowSize(cb) {\n  const [[windowWidth, windowHeight], setWindowSize] = useState([window.innerWidth, window.innerHeight])\n  \n  useEffect(() => {\n    const handleResize = () => {\n      cb()\n      setWindowSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [cb])\n  return [windowWidth, windowHeight]\n}","import React from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from 'react-responsive-carousel';\nimport './carousel.css'\nimport Quotes from './stoic-quote-generator/Quotes'\nimport './style.css'\nimport SearchMovies from './movie-searcher/SearchMovies'\nimport Meme from './meme-generator/Meme'\nimport MainCalculator from './calculator/MainCalculator';\nimport Game from './noughts-crosses/Game';\nimport Stopwatch from './stopwatch-component/Stopwatch';\nimport Paint from './paint-application/Paint'\n\n\nfunction App() {\n    return (\n<div>\n    <Carousel showThumbs={false} >\n        <div className=\"CarStyle\" >\n           <div className=\"appPos\"> <Quotes /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <SearchMovies /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <Meme /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <Paint /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <MainCalculator /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <Game /> </div>\n        </div>\n        <div className=\"CarStyle\">\n           <div className=\"appPos\"> <Stopwatch /> </div>\n        </div>\n    </Carousel>\n    </div> \n\n);\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}